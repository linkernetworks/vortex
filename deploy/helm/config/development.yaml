# vortex/deploy/helm/apps
apps:
  # vortex/deploy/helm/apps/charts/vortex-server
  vortex:
    controller:
      replicaCount: 1
      apiserverImageTag: v0.3.6
      webappImageTag: v0.3.9
      portalCPU: 50m
      serverCPU: 100m
    service:
      ports:
        apiserverNodePort: 32326
        webappNodePort: 32767
    secret:
      dockerToken:
  # vortex/deploy/helm/apps/charts/network-controller
  network-controller:
    controller:
      imageTag: v0.4.9
      tcpCPU: 50m
      unixCPU: 50m
  # vortex/deploy/helm/apps/charts/openvswitch-exec
  openvswitch-exec:
    controller:
      imageTag: latest
      cpu: 10m
  # vortex/deploy/helm/apps/charts/metrics-server
  metrics-server:
    controller:
      cpu: 30m
  # vortex/deploy/helm/apps/charts/prometheus
  prometheus:
    controller:
      replicaCount: 1
      imageTag: v2.2.1
      scrapeInterval: 5s
      retention: 24h
      cpu: 30m
    service:
      nodePort: true
    # vortex/deploy/helm/apps/charts/prometheus/charts/alertmanager
    alertmanager:
      controller:
        imageTag: v0.14.0
        cpu: 10m
      config:
        smtpHost: smtp.sendgrid.net:587
        smtpFrom: vortex@linkernetworks.com
        smtpUsername: apikey
        smtpPassword: "you need to replace this token manually"
        adminEmail: vortex@linkernetworks.com
    # vortex/deploy/helm/apps/charts/prometheus/charts/cadvisor
    cadvisor:
      controller:
        imageTag: v0.27.4
        housekeeping_interval: 10s
        cpu: 100m
    # vortex/deploy/helm/apps/charts/prometheus/charts/kube-state-metrics
    kube-state-metrics:
      controller:
        imageTag: v1.3.1
        cpu: 50m
    # vortex/deploy/helm/apps/charts/prometheus/charts/node-exporter
    node-exporter:
      controller:
        imageTag: v1.0.1
        cpu: 50m

# vortex/deploy/helm/services
services:
  # vortex/deploy/helm/services/charts/mongodb
  mongodb:
    controller:
      replicaCount: 1
      cpu: 50m
      image:
        tag: 4.1.1-xenial
      pvc:
        volumeType: nfs
        nfsPath: /nfsshare/mongodb
        nfsServer: 172.17.8.100
        reclaimPolicy: Delete
        accessModes: ReadWriteOnce
        storageClass: mongo
        storage: 1Gi
    service:
      nodePort: true
  # vortex/deploy/helm/services/charts/influxdb
  influxdb:
    controller:
      replicaCount: 1
      cpu: 50m
      image:
        tag: 1.5-alpine
      pvc:
        volumeType: nfs
        nfsPath: /nfsshare/influxdb
        nfsServer: 172.17.8.100
        reclaimPolicy: Delete
        accessModes: ReadWriteOnce
        storageClass: influx
        storage: 1Gi
    service:
      nodePort: true
